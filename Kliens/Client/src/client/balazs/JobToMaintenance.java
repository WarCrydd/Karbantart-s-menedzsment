/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package client.balazs;

import client.Client;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/**
 *
 * @author balazs
 */
public class JobToMaintenance extends javax.swing.JDialog {

    private Client client;
    private int eszkozid, karbid;
    private HashMap<String, ArrayList<Integer>> idopontok=new HashMap<>();
    private HashMap<String, Integer> idk=new HashMap<>();
    private DefaultListModel dlm = new DefaultListModel();
    private DefaultTableModel dtm;
    
    
    public JobToMaintenance(java.awt.Frame parent, boolean modal, Client c, int eszkozid, int karbid) {
        super(parent, modal);
        initComponents();
        client=c; this.eszkozid=eszkozid; this.karbid=karbid;
        dtm=(DefaultTableModel) feladatokTable.getModel();
        feltolt();
    }
    
    boolean success=false;
    public boolean showDialog(){
        this.setVisible(true); 
        return success;
    }
    
    private void feltolt(){
        dlm.removeAllElements();
        JSONArray array = client.getUsers(eszkozid, karbid);
        for (int i = 0; i < array.size(); i++) {
            JSONObject obj = (JSONObject)array.get(i);
            String username = obj.get("username").toString();
            ArrayList<Integer> orak=new ArrayList<>();
            JSONArray idok=(JSONArray) obj.get("szabadorak");
            for (int j = 0; j < idok.size(); j++) {
                long szam =  (long) idok.get(j);
                orak.add((int)szam);
            }
            
            idopontok.put(username, orak);
            dlm.addElement(username);
            idk.put(username, Integer.parseInt(obj.get("id").toString()));
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        karbantartokLista = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idopontComboBox = new javax.swing.JComboBox<>();
        kiosztButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        feladatokTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        karbantartokLista.setModel(dlm);
        karbantartokLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        karbantartokLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                karbantartokListaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(karbantartokLista);

        jLabel1.setText("Alkalmas karbantartó kiválasztása:");

        jLabel2.setText("Szabad időpontok:");

        kiosztButton.setText("Feladat kiosztása");
        kiosztButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kiosztButtonActionPerformed(evt);
            }
        });

        feladatokTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Eszköz", "Helyszín", "Időpont"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feladatokTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(feladatokTable);
        if (feladatokTable.getColumnModel().getColumnCount() > 0) {
            feladatokTable.getColumnModel().getColumn(0).setResizable(false);
            feladatokTable.getColumnModel().getColumn(1).setResizable(false);
            feladatokTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel3.setText("óra");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(kiosztButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idopontComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idopontComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kiosztButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void karbantartokListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_karbantartokListaValueChanged
        String username = karbantartokLista.getSelectedValue();
        if(!username.isEmpty()){
            idopontComboBox.removeAllItems();
            ArrayList<Integer> orak=idopontok.get(username);
            for (Integer ora : orak) idopontComboBox.addItem(ora.toString()); 
        
            int karbantartoid = idk.get(username);
            JSONArray array = client.getTODoList(karbantartoid);
            dtm.setNumRows(0); 
            for (int i = 0; i < array.size(); i++) {
                JSONObject obj = (JSONObject) array.get(i);
                String name = obj.get("name").toString();
                String date = obj.get("date").toString();
                String helyszin = obj.get("helyszin").toString();
                dtm.addRow(new Object[]{name, helyszin, date});
            }
        }
        
    }//GEN-LAST:event_karbantartokListaValueChanged

    private void kiosztButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kiosztButtonActionPerformed
        String username=karbantartokLista.getSelectedValue();
        if(username.isEmpty()) JOptionPane.showMessageDialog(null, "Válasszon karbantartót!");
        else{
            int karbantartoid = idk.get(username);
            int ido = Integer.parseInt( idopontComboBox.getSelectedItem().toString() );
            switch (client.addJobToMaintenance(karbantartoid, karbid, ido)) {
                case 0:
                    JOptionPane.showMessageDialog(null, "Sikeres kiosztás!");
                    success=true;
                    dispose();
                    break;
                case 2:
                    JOptionPane.showMessageDialog(null, "Vagy ütközés történt, vagy a karbantartó már nem tud több munkát fogadni!");
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Hiba történt a feladat kiosztása során!");
                    break;
            }
        }
    }//GEN-LAST:event_kiosztButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JobToMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JobToMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JobToMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JobToMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JobToMaintenance dialog = new JobToMaintenance(new javax.swing.JFrame(), true, null, 0, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable feladatokTable;
    private javax.swing.JComboBox<String> idopontComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> karbantartokLista;
    private javax.swing.JButton kiosztButton;
    // End of variables declaration//GEN-END:variables
}
